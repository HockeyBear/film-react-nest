services:
  backend:
    image: ghcr.io/hockeybear/backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      - db
    networks:
      - backend_network
    env_file:
      - .env
    restart: unless-stopped

  frontend:
    image: ghcr.io/hockeybear/frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    networks:
      - backend_network
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    env_file:
      - .env
    volumes:
      - pgadmin-data:/var/lib/pgadmin/data
    ports:
      - "8081:8081"
    networks:
      - backend_network 
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres
    container_name: postgres
    networks:
      - backend_network 
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/test/prac.init.sql:/docker-entrypoint-initdb.d/1_init.sql:ro
      - ./backend/test/prac.films.sql:/docker-entrypoint-initdb.d/2_films.sql:ro
      - ./backend/test/prac.schedule.sql:/docker-entrypoint-initdb.d/3_schedules.sql:ro
    restart: unless-stopped

  nginx:
    image: nginx
    ports:
      - "80:80"
    networks:
      - frontend_network
      - backend_network  
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
      - frontend_dist:/frontend:ro

networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge

volumes:
  pgdata:
  pgadmin-data:
  frontend_dist:
